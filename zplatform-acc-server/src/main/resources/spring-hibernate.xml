<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
    
    <!--启用注解 -->
	<context:annotation-config/>
	<!-- 使用annotation 自动注册com.zlebank.zplatform.acc包下面的bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.zlebank.zplatform.acc">
	</context:component-scan>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="accDataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.zlebank.zplatform.acc.pojo.PojoAbstractSubject</value>
				<value>com.zlebank.zplatform.acc.pojo.PojoSubject</value>
				<value>com.zlebank.zplatform.acc.pojo.PojoAccount</value>
				<value>com.zlebank.zplatform.acc.pojo.PojoAccFrozenTask</value>
				<value>com.zlebank.zplatform.acc.pojo.PojoBusiAcct</value>
				<value>com.zlebank.zplatform.acc.pojo.PojoBusiAcctSubjectMapping
				</value>
				<value>com.zlebank.zplatform.acc.pojo.PojoSubjectRuleConfigure
				</value>
				<value>com.zlebank.zplatform.acc.pojo.PojoAccEntry</value>
				<value>com.zlebank.zplatform.acc.pojo.PojoBusiness</value>		
				<value>com.zlebank.zplatform.acc.pojo.PojoTxnsSplitAccount</value>	
				<value>com.zlebank.zplatform.acc.pojo.PojoTradeEntryEventMapping</value>
				<value>com.zlebank.zplatform.acc.pojo.PojoFinanceProduct</value>
				</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="dialect">org.hibernate.dialect.Oracle9Dialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.id.new_generator_mappings">true</prop>
			</props>
		</property>
		<!-- <property name="packagesToScan">
			<list>
				<value>com.zlebank.zplatform.acc.pojo</value>
			</list>
		</property> -->
	</bean>
	<bean id="accDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      <!-- 基本属性 url、user、password -->
      <property name="url" value="${jdbcUrl}" />
      <property name="username" value="${username}" />
      <property name="password" value="${password}" />
      <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="${initialPoolSize}" />
      <property name="minIdle" value="${minpoolSize}" /> 
      <property name="maxActive" value="${maxPoolSize}" />
      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="60000" />
      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="60000" />
      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="300000" />
      <property name="validationQuery" value="SELECT 'x'" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />
      </bean>
      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      <!-- <property name="poolPreparedStatements" value="true" />
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
 -->
      <!-- 配置监控统计拦截的filters -->
    <!--   <property name="filters" value="stat" /> -->
<!-- </bean>
	<bean id="accDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.101.178:1521:primary" />
		<property name="user" value="payservice" />
		<property name="password" value="payservice" />
		<property name="user" value="yy" />
		<property name="password" value="yy" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.101.245:1521:primary" />
		<property name="user" value="payservice" />
		<property name="password" value="pay1234" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.101.245:1521:primary" />
		<property name="user" value="lc" />
		<property name="password" value="lc" />
		<property name="jdbcUrl" value="${jdbcUrl}"/>
		<property name="user" value="${username}" />
		<property name="password" value="${password}"/>
		<property name="maxPoolSize" value="${maxPoolSize}" />
		<property name="minPoolSize" value="${minpoolSize}" />
		<property name="initialPoolSize" value="${initialPoolSize}"/>
		<property name="maxIdleTime" value="${maxIdleTime}" />

	</bean> -->

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven />
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="java:comp/env/jdbc/yhzjDs" /> </bean> -->

	<!-- <bean id="propertyFileConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="ignoreUnresolvablePlaceholders" value="true" />  
		<property name="locations">
			<list>
				<value>classpath:./conf/config.properties</value>
				<value>file:F:/workContent/config/acc/*.properties</value>
			</list>
		</property>
	</bean>
	 -->
</beans>